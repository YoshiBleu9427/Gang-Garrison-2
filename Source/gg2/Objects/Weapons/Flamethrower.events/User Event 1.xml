<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="OTHER" id="11">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    // prevent sputtering
    if (ammoCount &lt; 1.8)
        ammoCount -= 1.8;
    if (readyToShoot and ammoCount &gt;= 1.8
        and !collision_line(x,y,x+lengthdir_x(25,owner.aimDirection),y+lengthdir_y(25,owner.aimDirection),Obstacle,1,0)
        and !collision_line(x,y,x+lengthdir_x(25,owner.aimDirection),y+lengthdir_y(25,owner.aimDirection),BulletWall,1,0)
        and !collision_line(x,y,x+lengthdir_x(25,owner.aimDirection),y+lengthdir_y(25,owner.aimDirection),IntelGate,1,0)
        and (!collision_line(x,y,x+lengthdir_x(25,owner.aimDirection),y+lengthdir_y(25,owner.aimDirection),TeamGate,1,0)
         or global.mapchanging))
    {
        if(alarm[3] &lt;= 0)
            loopsoundstart(x,y,FlamethrowerSnd);
        else
            loopsoundmaintain(x,y,FlamethrowerSnd);
        alarm[3] = 2 / global.delta_factor;
        
        var shot, calculatedspread;
        randomize();
        calculatedspread = sign(random(2)-1)*power(random(3), 1.8);
        calculatedspread *= 1 - hspeed/owner.basemaxspeed;
        shot = createShot(x+lengthdir_x(25,owner.aimDirection)+owner.equipmentOffset,y+lengthdir_y(25,owner.aimDirection),Flame, DAMAGE_SOURCE_FLAMETHROWER, owner.aimDirection+calculatedspread,6.5+random(3.5));
        with(shot)
            motion_add(owner.direction, owner.speed);
        
        justShot=true;
        readyToShoot=false;
        isRefilling = false;
        ammoCount -= 1.8;
        
        if (ammoCount &gt; 0)
            alarm[0] = refireTime / global.delta_factor;
        else
            alarm[0] = reloadBuffer*2 / global.delta_factor;
        alarm[5] = reloadBuffer / global.delta_factor;
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
