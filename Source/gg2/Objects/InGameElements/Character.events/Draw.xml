<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];

if (distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &gt; 800)
    exit;

if(intel and intelRecharge &lt; 900)
    draw_intel_timer(intelRecharge/900, team == TEAM_RED, -8);

var xr, yr;
xr = round(x);
yr = round(y);

image_alpha = cloakAlpha;

if (global.myself.team == team and canCloak)
    image_alpha = cloakAlpha/2 + 0.5;

if (invisible)
    exit;

if(stabbing)
    image_alpha -= power(currentWeapon.stab.alpha, 2);

if (team == global.myself.team and (player != global.myself or global.showHealthBar))
{
    draw_set_alpha(1);
    draw_healthbar(xr-10, yr-30, xr+10, yr-25,hp*100/maxHp,c_black,c_red,c_green,0,true,true);
}

draw_set_alpha(1);
if (team == TEAM_RED)
    ubercolour = c_red;
else
    ubercolour = c_blue;

// sprite resource selection
var sprite, overlaySprite, noNewAnim;
noNewAnim = player.class == CLASS_QUOTE or sprite_special or player.humiliated;

if (zoomed)
{
    if (team == TEAM_RED)
        sprite = SniperCrouchRedS;
    else
        sprite = SniperCrouchBlueS;
    overlaySprite = sniperCrouchOverlay;
    animationImage = animationImage mod 2; // sniper crouch only has two frames, avoid overflow
}
// most classes, check for running jumping and standing
else if (!noNewAnim)
{
    if(!onground)
        sprite = spriteJump;
    else
    {
        if(still)
        {
            // set up vars for slope detection
            charSetSolids();
            if(image_xscale &gt; 0)
            {
                sprite_tilt_left = spriteLeanL;
                sprite_tilt_right = spriteLeanR;
            }
            else
            {
                sprite_tilt_left = spriteLeanR;
                sprite_tilt_right = spriteLeanL;
            }
            
            // default still sprite
            sprite = spriteStand;
            
            { // detect slopes
                var openright, openleft;
                openright = !collision_point_solid(x+6, bbox_bottom+2) and !collision_point_solid(x+2, bbox_bottom+2);
                openleft = !collision_point_solid(x-7, bbox_bottom+2) and !collision_point_solid(x-3, bbox_bottom+2);
                if (openright)
                    sprite = sprite_tilt_right;
                if (openleft)
                    sprite = sprite_tilt_left;
                if (openright and openleft)
                {
                    openright = !collision_point_solid(bbox_right, bbox_bottom+2);
                    openleft = !collision_point_solid(bbox_left, bbox_bottom+2);
                    if (openright)
                        sprite = sprite_tilt_right;
                    if (openleft)
                        sprite = sprite_tilt_left;
                }
            }
                
            charUnsetSolids();
        }
        else
        {
            sprite = spriteRun;
            if (player.class == CLASS_HEAVY and abs(hspeed) &lt; 3) // alternative sprite for extremely slow moving heavies
            {
                if (team == TEAM_RED)
                    sprite = HeavyRedWalkS;
                else
                    sprite = HeavyBlueWalkS;
            }
        }
    }
    overlaySprite = overlay;
}
else
{
    sprite = sprite_index;
    overlaySprite = overlay;
}

if (sprite != sprite_index and (sprite == spriteLeanR or sprite == spriteLeanL)
    and !taunting and !omnomnomnom and !stabbing // These override "sprite"
    and !noNewAnim)
    yoffset = 6;
else
    yoffset = 0;

equipmentOffset = ((sprite == spriteRun) and
                (floor(animationImage) mod 2) == 0)
               and onground;
equipmentOffset *= -2; // two pixels up for whether the sprite is bobbing(above expression gives one down)

overlayOffset = equipmentOffset;

if (player.class == CLASS_HEAVY or player.class == CLASS_SOLDIER
    or noNewAnim or taunting)
    equipmentOffset = 0; // override run bob for classes with no run bob
else if (abs(hspeed) &lt; 3 and equipmentOffset = -2 and !taunting)
{
    equipmentOffset += 2;
    yr += 2;
    overlayOffset = equipmentOffset-2; // mad because overlays use yr
}
else
    overlayOffset = equipmentOffset;

if(!noNewAnim) // quote and sniper zoom still use the old anim system so animationOffset is still set, override it here for everything else
    animationOffset = 0;


equipmentOffset += yoffset;

yr += yoffset;

if (omnomnomnom)
{
    draw_sprite_ext_overlay(omnomnomnomSprite,omnomnomnomOverlay,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
    if (ubered)
        draw_sprite_ext_overlay(omnomnomnomSprite,omnomnomnomOverlay,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
}
else if (taunting)
{
    draw_sprite_ext_overlay(tauntsprite,tauntOverlay,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
    if (ubered)
        draw_sprite_ext_overlay(tauntsprite,tauntOverlay,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
}
else if (player.humiliated)
    draw_sprite_ext(humiliationPoses,floor(animationImage)+humiliationOffset,xr,yr,image_xscale,image_yscale,image_angle,c_white,image_alpha);
else if (!taunting)
{
    if (intel and player.class != CLASS_QUOTE and !zoomed)
        draw_sprite_ext(spriteIntel,0,xr,round(y)+equipmentOffset, image_xscale, image_yscale, 0, c_white, image_alpha);
    if (cloak)
    {
        if (!ubered)
            draw_sprite_ext(sprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,image_alpha);
        else if (ubered)
        {
            draw_sprite_ext(sprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
            draw_sprite_ext(sprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
        }
    }
    else
    {
        if (!ubered)
            draw_sprite_ext_overlay(sprite,overlaySprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,image_alpha,overlayOffset);
        else if (ubered)
        {
            draw_sprite_ext_overlay(sprite,overlaySprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,1,overlayOffset);
            draw_sprite_ext_overlay(sprite,overlaySprite,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7,overlayOffset);
        }
    }
}

if (burnDuration &gt; 0 or burnIntensity &gt; 0)
{
    for(i = 0; i &lt; realnumflames; i += 1)
    {
        draw_sprite_ext(FlameS, alarm[5] + i + random(2), x + flameArray_x[i], y + flameArray_y[i], 1, 1, 0, c_white, burnIntensity / maxIntensity * 0.5 + 0.25);
    }  
}

if (distance_to_point(mouse_x, mouse_y) &lt; 25)
{
    if (cloak and team != global.myself.team)
        exit;
    draw_set_alpha(1);
    if(team == TEAM_RED)
        draw_set_color(c_red);
    else
        draw_set_color(c_blue);
    
    var width, height;
    width = name_width_badges(player);
    height = string_height(player.name);
    
    draw_name_badges(round(xr - width / 2), round(y) - 35 - height, player, 1);
    draw_set_halign(fa_center);
    draw_set_valign(fa_bottom);
    
    if(team == global.myself.team &amp;&amp; global.showTeammateStats)
    {
        if(weapons[0] == Medigun)
            draw_text(xr,round(y)+50, "Superburst: " + string(currentWeapon.uberCharge/20) + "%");
        else if(weapons[0] == Shotgun)
            draw_text(xr,round(y)+50, "Nuts 'N' Bolts: " + string(nutsNBolts));
        else if(weapons[0] == Minegun)
            draw_text(xr,round(y)+50, "Lobbed Mines: " + string(currentWeapon.lobbed));
    }
}

// Copied from Lorgan's itemserver "angels" with slight modifications
// All credit be upon him
if (demon != -1)
{
    demonX = median(x-40,demonX,x+40);
    demonY = median(y-40,demonY,y);
    demonOffset += demonDir;
    if (abs(demonOffset) &gt; 15)
        demonDir *= -1;

    var dir;
    if (demonX &gt; x)
        dir = -1;
    else
        dir = 1;

    if (demonFrame &gt; sprite_get_number(demon))
        demonFrame = 0;

    if (stabbing || ubered)
        draw_sprite_ext(demon,demonFrame+floor(animationImage)+7*player.team,demonX,demonY+demonOffset,dir*1,1,0,c_white,1);
    else
        draw_sprite_ext(demon,demonFrame+floor(animationImage)+7*player.team,demonX,demonY+demonOffset,dir*1,1,0,c_white,image_alpha);

    demonFrame += 1;
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
