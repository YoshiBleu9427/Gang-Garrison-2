<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">global.timeLimitMins = 15;
global.caplimit = 1;
global.respawntime = 15 * 30;

menu_create(48, 172, 500, 260, 32, 40, 104, 6);
menu_background(512, 24, 8, 12, 4);
bgtabs = true;

menu_addtablink("Previous", '
    page = max(page - 1, 0);
    event_user(0);
');
menu_addtablink("Next", '
    page = min(page + 1, ceil( (ds_list_size(mapList) * items_per_page) +1) );
    event_user(0);
');


menu_addlink("Map selection -", '');

page = 0
items_per_page = 10

// borrowed file-search code from Port
var file, pattern, prefix, fp, i;

// Prefix since results from file_find_* don't include path
prefix = working_directory + "\Maps\";
pattern = prefix + "*.npc";

mapList = ds_list_create();

// Find files in Maps folder
for (file = file_find_first(pattern, 0); file != ""; file = file_find_next())
{
    ds_list_add(mapList, file);
}

ds_list_sort(mapList, true);


// verify maps
goodMapList = ds_list_create();
mapCompletedList = ds_list_create();
for (i = (page * items_per_page); i &lt; ds_list_size(mapList); i += 1)
{
    // Check that there are both a npc and a png file
    var mapName, mapExists;
    file = ds_list_find_value(mapList, i);
    mapName = string_copy(file, 1, string_length(file) - 4);
    mapExists = false;
    if(file_find_first(prefix + mapName + "*.png", 0) != "") {
        mapExists = true;
    } else if(file_find_first(prefix + mapName + "*.PNG", 0) != "") {
        mapExists = true;
    }
    
    if(mapExists) {
        ds_list_add(goodMapList, mapName);
        ds_list_add(mapCompletedList, TrainingMapHasHiscore(mapName, global.class));
    }
}

ds_list_destroy(mapList);

// build map list
event_user(0);
</argument>
      </arguments>
    </action>
  </actions>
</event>
